#!/bin/sh

# BEGIN DEFAULT CONFIG
region=Moscow,ru
units=metric  # internal, metric, imperial
sleep_time=22:00
wake_up_time=06:40
alarm_max_temp=24
alarm_min_temp=-10
device_serial=
# END DEFAULT CONFIG


if [ -e "/etc/blink1-weather.conf" ]; then
    . "/etc/blink1-weather.conf"
fi

if [ -e "$HOME/.config/blink1-weather.conf" ]; then
    . "$HOME/.config/blink1-weather.conf"
fi


prog=$(basename "$0")
# http://openweathermap.org/forecast
url="http://api.openweathermap.org/data/2.5/forecast/daily?q=${region}&mode=json&units=${units}&cnt=1"
state_file=/tmp/blink1-weather.state


device_id=

blink1_tool_output() {
    args=

    if [ -n "$device_serial" ]; then
        if [ -z "$device_id" ]; then
            device_id=$(blink1-tool --list | sed -n "s/^id:\([0-9]\+\) - serialnum:${device_serial}\\b.*$/\1/p" | head -1)

            if [ -z "$device_id" ]; then
                echo "$prog: device not found" >&2
                exit 1
            fi
        fi

        args="$args --id $device_id"
    fi

    blink1-tool $args "$@"
    rc=$?

    if [ "$rc" != 0 ]; then
        echo "$prog: blink1-tool dies with code $rc" >&2
        rm -f "$state_file"
        exit 1
    fi
}

blink1_tool() {
    blink1_tool "$@" >/dev/null
}


if [ "$(date +%H%M)" -lt "$(echo "$wake_up_time" | tr -d :)" ]; then
    rm -f "$state_file"
    blink1_tool --off
    exit 0
fi

if [ "$(date +%H%M)" -ge "$(echo "$sleep_time" | tr -d :)" ]; then
    rm -f "$state_file"
    blink1_tool --off
    exit 0
fi


weather_data=$(wget -q -O - "$url")
weather_id=$(echo "$weather_data" | jq '.list[0].weather[0].id')

if [ -z "$weather_id" ]; then
    echo "$prog: cannot get weather id" >&2
    exit 1
fi


state=0
mode=off
rgb=0,0,0
fading=300
delay=500

# http://openweathermap.org/weather-conditions
case $weather_id in
    2??)  # thunderstorm
        state=2
        mode=blink
        rgb=192,0,192
    ;;
    3??)  # drizzle
        state=3
        mode=on
        rgb=0,0,128
    ;;
    5??)  # rain
        state=5
        mode=blink
        rgb=0,0,192
        fading=500
        delay=2000
    ;;
    6??)  # snow
    ;;
    7??)  # atmosphere
    ;;
    8??)  # clouds
    ;;
    90?)  # extreme
        state=9.1
        mode=blink
        rgb=255,0,0
    ;;
    950|951|952|953|954|955|956)  # additional, setting - strong breeze
    ;;
    957|958|959|960|961|962)  # additional, high wind - hurricane
        state=9.2
        mode=blink
        rgb=255,0,0
    ;;
    *)
        echo "$prog: unknown weather id: $weather_id" >&2
        rm -f "$state_file"
        blink1_tool --off
        exit 1
    ;;
esac


if [ "$state" = 0 ]; then
    temp_max=$(echo "$weather_data" | jq '.list[0].temp.max')
    temp_min=$(echo "$weather_data" | jq '.list[0].temp.min')

    if awk -va="$temp_max" -vb="$alarm_max_temp" 'BEGIN {exit (a>=b)?0:1}'; then
        state=a.1
        mode=blink
        rgb=128,128,0
        fading=500
        delay=2000
    elif awk -va="$temp_min" -vb="$alarm_min_temp" 'BEGIN {exit (a<=b)?0:1}'; then
        state=a.1
        mode=blink
        rgb=128,128,0
        fading=500
        delay=2000
    fi
fi


if [ ! -e "$state_file" ]; then
    echo 0 >"$state_file"
    chmod 0666 "$state_file"
fi

prev_state=$(cat "$state_file")

if [ "$prev_state" != "$state" ]; then
    echo "$state" >"$state_file"
fi


case $mode in
  blink)
        if [ "$prev_state" = "$state" -a "$1" != "-f" ]; then
            blink1_tool_output --playstate | grep -qF playing:1 && exit 0
        fi

        blink1_tool --off >/dev/null
        blink1_tool --rgb "$rgb" --millis "$fading"             --setpattline 0
        blink1_tool --rgb "$rgb" --millis "$((delay - fading))" --setpattline 1
        blink1_tool --rgb 0,0,0  --millis "$fading"             --setpattline 2
        blink1_tool --rgb 0,0,0  --millis "$((delay - fading))" --setpattline 3
        blink1_tool --play 1,0,3,0
    ;;
    on)
        blink1_tool --rgb "$rgb"
    ;;
    *)
        blink1_tool --off
    ;;
esac


exit 0
